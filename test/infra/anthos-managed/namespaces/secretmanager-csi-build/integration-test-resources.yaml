  # Copyright 2020 Google LLC
  #
  # Licensed under the Apache License, Version 2.0 (the "License");
  # you may not use this file except in compliance with the License.
  # You may obtain a copy of the License at
  #
  #     http://www.apache.org/licenses/LICENSE-2.0
  #
  # Unless required by applicable law or agreed to in writing, software
  # distributed under the License is distributed on an "AS IS" BASIS,
  # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  # See the License for the specific language governing permissions and
  # limitations under the License.
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMServiceAccount
metadata:
  name: k8s-csi-test
spec:
  displayName: Integration Tests Service Account
---
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicy
metadata:
  name: k8s-csi-test-bindings
spec:
  resourceRef:
    apiVersion: iam.cnrm.cloud.google.com/v1beta1
    kind: IAMServiceAccount
    name: k8s-csi-test
  bindings:
    - role: roles/iam.workloadIdentityUser
      members:
        - serviceAccount:k8s-prow-builds.svc.id.goog[test-pods/secrets-store-csi-driver-gcp]
---
apiVersion: secretmanager.cnrm.cloud.google.com/v1beta1
kind: SecretManagerSecret
metadata:
  name: test-secret-a
  labels:
    replication-type: automatic
spec:
  replication:
    automatic: true
---
# This secret will hold the exported service account credential for the
# identity:
#
#    k8s-csi-test@secretmanager-csi-build.iam.gserviceaccount.com
#
# This exported SA cred will then be injected and used by the
# https://github.com/kubernetes-sigs/secrets-store-csi-driver
# test cases.
#
# This should be rotated with:
#
#   $ gcloud iam service-accounts keys create "key.json" \
#     --project="secretmanager-csi-build" \
#     --iam-account="k8s-csi-test@secretmanager-csi-build.iam.gserviceaccount.com"
#
#   $ gcloud secrets versions add k8s-oss-prow --project=secretmanager-csi-build --data-file=key.json
#
apiVersion: secretmanager.cnrm.cloud.google.com/v1beta1
kind: SecretManagerSecret
metadata:
  name: k8s-oss-prow
  labels:
    replication-type: automatic
spec:
  replication:
    automatic: true
---
  apiVersion: secretmanager.cnrm.cloud.google.com/v1beta1
  kind: SecretManagerSecretVersion
  metadata:
    name: test-secret-a-version
  spec:
    enabled: true
    secretData:
      # "hunter2"
      value: "aHVudGVyMg=="
    secretRef:
      name: test-secret-a
---
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicy
metadata:
  name: test-secret-a-binding
spec:
  resourceRef:
    apiVersion: secretmanager.cnrm.cloud.google.com/v1beta1
    kind: SecretManagerSecret
    name: test-secret-a
  bindings:
    - role: roles/secretmanager.secretAccessor
      members:
        - serviceAccount:k8s-csi-test@secretmanager-csi-build.iam.gserviceaccount.com
        # TODO: remove once https://github.com/kubernetes/test-infra/pull/22944
        # is merged and switches workload identity to the k8s-csi-test SA.
        - serviceAccount:k8s-prow-builds.svc.id.goog[test-pods/default]
---
# See
# https://github.com/kubernetes/test-infra/blob/master/prow/prow_secrets.md#prow-secrets-management
# and
# https://github.com/kubernetes/test-infra/blob/master/config/prow/cluster/build_kubernetes-external-secrets_customresource.yaml
# for information on secret syncing.
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicy
metadata:
  name: k8s-oss-prow-binding
spec:
  resourceRef:
    apiVersion: secretmanager.cnrm.cloud.google.com/v1beta1
    kind: SecretManagerSecret
    name: k8s-oss-prow
  bindings:
    - role: roles/secretmanager.secretAccessor
      members:
        - serviceAccount:kubernetes-external-secrets-sa@k8s-prow-builds.iam.gserviceaccount.com
